name: release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Get architecture
        run: echo "ARCH=$(uname -m)" >> $GITHUB_ENV

      - uses: kenchan0130/actions-system-info@master
        id: system-info

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            target/
            ~/.cargo
          key: ${{ runner.os }}-rust

      - uses: dtolnay/rust-toolchain@1.70.0

      - run: cargo build --release --all-features

      - uses: actions/upload-artifact@v3
        with:
          name: solana-simulator-simulate-${{ steps.system-info.outputs.platform }}-${{ env.ARCH }}
          path: target/release/simulate

      - uses: actions/upload-artifact@v3
        with:
          name: solana-simulator-get-program-data-${{ steps.system-info.outputs.platform }}-${{ env.ARCH }}
          path: target/release/get_program_data

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          path: bins

      - run: |
          for f in $(ls bins/*/*); do
            fp=$(dirname "$f"); 
            fl=$(basename "$f");
            mv "$fp" "${fp}_";
            mv "${fp}_/$fl" "$fp";
            rmdir "${fp}_";
          done

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          artifacts: "bins/*"
          tag: ${{ env.RELEASE_VERSION }}
            
